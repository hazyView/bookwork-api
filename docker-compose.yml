services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: bookwork-db
    environment:
      POSTGRES_DB: bookwork
      POSTGRES_USER: postgres  
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Bookwork API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bookwork-api
    environment:
      - PORT=8000
      - HOST=0.0.0.0
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=bookwork
      - DB_SSLMODE=disable
      - JWT_SECRET=development-secret-key-change-in-production
      - JWT_ISSUER=bookwork-api
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Redis (for future caching and session storage)
  redis:
    image: redis:7-alpine
    container_name: bookwork-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin (for database management)
  pgadmin:
    image: dpage/pgadmin4
    container_name: bookwork-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@bookwork.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  default:
    name: bookwork-network
